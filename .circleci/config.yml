defaults:
  environment: &env
    TRAVIS_BRANCH: $CIRCLE_BRANCH
    TRAVIS_PULL_REQUEST: $CI_PULL_REQUEST || "false"
  steps: &ci_steps
    - checkout
    - run: bin/ci prepare_system
    - run: bin/ci prepare_build
    - run: bin/ci build

version: 2

jobs:
  prepare_common:
    docker:
      - image: docker:stable-git
    steps:
      # checkout specific distribution-scripts version to perform releases and nightly
      - run: |
          git clone https://github.com/crystal-lang/distribution-scripts.git ~/distribution-scripts
          cd ~/distribution-scripts
          git checkout dd1c0caad8dfe628c2b559ebd08b6f0a8d423b1d
      # persist relevant information for build process
      - run: |
          cd ~/distribution-scripts
          touch build.env
          echo "export DOCKER_REPOSITORY=crystallang/crystal" >> build.env

          # What to build
          echo "export CRYSTAL_SHA1=b782738fffb1b9fba98f7aa44f9da11c3da259a1" >> build.env
          echo "export CRYSTAL_VERSION=0.25.1" >> build.env
          echo "export PACKAGE_ITERATION=2" >> build.env

          # Which previous version use
          export PREVIOUS_CRYSTAL_BASE_URL="https://github.com/crystal-lang/crystal/releases/download/0.25.0/crystal-0.25.0-1"
          echo "export PREVIOUS_CRYSTAL_RELEASE_LINUX64_TARGZ=${PREVIOUS_CRYSTAL_BASE_URL}-linux-x86_64.tar.gz" >> build.env
          echo "export PREVIOUS_CRYSTAL_RELEASE_LINUX32_TARGZ=${PREVIOUS_CRYSTAL_BASE_URL}-linux-i686.tar.gz" >> build.env
          echo "export PREVIOUS_CRYSTAL_RELEASE_DARWIN_TARGZ=${PREVIOUS_CRYSTAL_BASE_URL}-darwin-x86_64.tar.gz" >> build.env

          cat build.env
      - persist_to_workspace:
          root: ../
          paths:
            - distribution-scripts

  dist_darwin:
    macos:
      xcode: "9.0"
    shell: /bin/bash --login -eo pipefail
    steps:
      - run:
          name: Setup environment
          command: |
            brew install pkgconfig libtool

            sudo mkdir -p /opt/crystal
            sudo chown $(whoami) /opt/crystal/
            sudo mkdir -p /var/cache
            sudo chown $(whoami) /var/cache
      - attach_workspace:
          at: /tmp/workspace
      - run:
          no_output_timeout: 40m
          command: |
            echo "2.4.2" > /tmp/workspace/distribution-scripts/.ruby-version
            cd /tmp/workspace/distribution-scripts
            source build.env
            cd omnibus
            bundle check || bundle install --binstubs
            cd ../darwin
            make
      - persist_to_workspace:
          root: /tmp/workspace/distribution-scripts/darwin/
          paths:
            - build

  dist_artifacts:
    docker:
      - image: buildpack-deps:xenial
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - store_artifacts:
          path: /tmp/workspace/build
          destination: dist_packages

workflows:
  version: 2
  manual_osx_build:
    jobs:
      - prepare_common
      - dist_darwin:
          requires:
            - prepare_common
      - dist_artifacts:
          requires:
            - dist_darwin

